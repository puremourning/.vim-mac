{
  "$schema": "https://puremourning.github.io/vimspector/schema/vimspector.schema.json",
  "adapters": {
    "codelldb-with-build": {
      "extends": "CodeLLDB",
      "command": [
        "$HOME/Development/vimspector/CodeLLDB/build-linux/adapter/codelldb",
        "--port", "${unusedLocalPort}"
      ],
      "variables": {
        "buildme": {
          "shell": "jai ${buildArgs:${file\\}}"
        }
      },
      "configuration": {
        "preRunCommands": [
          "command script import $HOME/.lldbinit"
        ]
      }
    }
  },
  "configurations": {
    "Base": {
      "filetypes": [],
      "configuration": {
        "expressions": "native"
      }
    },
    "(standard) Run Current File": {
      "filetypes": [ "jai" ],
      "adapter": "codelldb-with-build",
      "extends": "Base",
      "configuration": {
        "request": "launch",
        "program": "${workspaceRoot}/${binaryName:${fileBasenameNoExtension\\}}",
        "args": [ "*${args}" ],
        "stopAtEntry": true,
        "stopOnEntry": true
      }
    },
    "(standard) Attach Current File": {
      "filetypes": [ "jai" ],
      "extends": "Base",
      "adapter": {
        "extends": "CodeLLDB",
        "command": [
          "$HOME/Development/vimspector/CodeLLDB/build-linux/adapter/codelldb",
          "--port", "${unusedLocalPort}"
        ]
      },
      "configuration": {
        "request": "attach",
        "program": "${workspaceRoot}/${binaryName:${fileBasenameNoExtension\\}}",
        "pid": "${PID}"
      }
    }
  }
}


/*


"type summary add -o \"return bytes( valobj.GetChildMemberWithName( '__data' ).GetPointeeData( 0, int(valobj.GetChildMemberWithName( '__size' ).value) ).uint8s ).decode( 'utf-8' )\" -x std::.*::basic_string_view std::.*::string_view",

type summary add -o "return bytes( valueobj.GetChildMemberWithName('data').GetPointeeData(0, int( valueobj.GetChildMemberWithName('count').value )).uint8s).decode( 'utf-8' )" -x string

*/
